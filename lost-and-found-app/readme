# README
Run instructions:
Install dependencies: (in the corresponding directory)
pip install -r requirements.txt

About the databases:
Modify your own database configuration in both database.py




Report:
Distributed Lost & Found System Project Report (Lost & Found System)
Project Overview
This project aims to build a Web-based distributed lost and found information system that allows users to post, browse, and comment on lost or found information online. The system adopts a front-end and back-end separation architecture, the back-end is built based on FastAPI and the data is persisted by PostgreSQL, the front-end is built using HTML+JavaScript, and the user interaction is concise and intuitive. The system is organized according to a distributed architecture and divided into two main services:

user_service: responsible for user registration, login and authentication.
item_service: responsible for lost/found information management, comments, image upload and other functions.


Technology Stack and Dependency Description:
Backend framework: FastAPI
Front-end: Native HTML + Bootstrap 5 + JavaScript
Database: PostgreSQL
Token Mechanism: JWT (using standard library jwt and secrets)
Image Uploads: UploadFile + StaticFiles Routing Support Access


lost-and-found-app/
├── user_service/
│   ├── app.py
│   ├── routes.py
│   ├── models.py
│   ├── database.py
│   └── ...
├── item_service/
│   ├── app.py
│   ├── routes.py
│   ├── models.py
│   ├── database.py
│   ├── uploads/
│   └── ...
├── static/
│   ├── items.html
│   ├── edit.html
│   ├── report.html
│   └── ...

